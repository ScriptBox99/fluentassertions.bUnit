@using Xunit.Sdk
@inherits Bunit.TestContext

@code {

    [Fact]
    public void ReturnElement_WhenMatchingByString()
    {
        var element = Render(@<button><h1>Test</h1></button>).AsElement();
        
        var returnedElement = element.ShouldHaveChildMarkup("<h1>Test</h1>");

        returnedElement.Should().Be(element);
    }
    
    [Fact]
    public void ReturnElement_WhenMatchingByRenderFragment()
    {
        var element = Render(@<button><h1>Test</h1></button>).AsElement();
        
        var returnedElement = element.ShouldHaveChildMarkup(@<h1>Test</h1>);

        returnedElement.Should().Be(element);
    }

    [Fact]
    public void Succeed_WhenHasChildMarkup_AndMatchingByString()
    {
        Render(@<button><h1>Test</h1></button>)
            .AsElement()
            .ShouldHaveChildMarkup("<h1>Test</h1>");
    }
    
    [Fact]
    public void Succeed_WhenHasChildMarkup_AndMatchingByRenderFragment()
    {
        Render(@<button><h1>Test</h1></button>)
            .AsElement()
            .ShouldHaveChildMarkup(@<h1>Test</h1>);
    }
    
    [Fact]
    public void ThrowException_WhenChildMarkupDoesNotMatch_AndMatchingByString()
    {
        Action aut = () => Render(@<button><h1>Test</h1></button>)
                            .AsElement()
                            .ShouldHaveChildMarkup("<h1>Something Else<h1>");

        aut.Should().Throw<HtmlEqualException>();
    }
    
    [Fact]
    public void ThrowException_WhenChildMarkupDoesNotMatch_AndMatchingByRenderFragment()
    {
        Action aut = () => Render(@<button><h1>Test</h1></button>)
            .AsElement()
            .ShouldHaveChildMarkup(@<h1>Something Else</h1>);

        aut.Should().Throw<HtmlEqualException>();
    }
    
    [Fact]
    public void ThrowException_WhenChildMarkupIsMissing_AndMatchingByString()
    {
        Action aut = () => Render(@<button></button>)
            .AsElement()
            .ShouldHaveChildMarkup("<h1>Test</h1>");

        aut.Should().Throw<XunitException>();
    }
    
    [Fact]
    public void ThrowException_WhenChildMarkupIsMissing_AndMatchingByRenderFragment()
    {
        Action aut = () => Render(@<button></button>)
            .AsElement()
            .ShouldHaveChildMarkup(@<h1>Test</h1>);

        aut.Should().Throw<XunitException>();
    }
}