@using Xunit.Sdk
@inherits Bunit.TestContext

@code {
    
    [Fact]
    public void Succeed()
    {
        Render(@<button type="button">Click me</button>)
            .Should().HaveType("button");
    }
    
    [Fact]
    public void ReturnAndConstraint()
    {
        var andConstraint = Render(@<button type="button">Click me</button>)
            .Should().HaveType("button");

        andConstraint.Should().BeOfType<AndConstraint<RenderedFragmentAssertions>>();
    }
    
    [Fact]
    public void ThrowException_WhenDoesNotHaveAttribute()
    {
        Action aut = () => Render(@<button>Click me</button>)
            .Should().HaveType("button");

        aut.Should().Throw<XunitException>()
            .And.UserMessage.Should().Be("Expected IRenderedFragment to have attribute \"type\", but found <null>.");
    }
    
    [Fact]
    public void ThrowException_WhenDoesNotHaveAttribute_AndShouldIncludeBecauseMessage()
    {
        Action aut = () => Render(@<button>Click me</button>)
            .Should().HaveType("button", "this is very important to {0}", "Steve");

        aut.Should().Throw<XunitException>()
            .And.UserMessage.Should().Be("Expected IRenderedFragment to have attribute \"type\" because this is very important to Steve, but found <null>.");
    }
    
    [Fact]
    public void ThrowException_WhenHasAttributeWithWrongValue()
    {
        Action aut = () => Render(@<button type="reset">Click me</button>)
            .Should().HaveType("button");

        aut.Should().Throw<XunitException>()
            .And.UserMessage.Should().Be("Expected IRenderedFragment \"type\" attribute to have value \"button\", but found \"reset\".");
    }
    
    [Fact]
    public void ThrowException_WhenHasAttributeWithWrongValue_AndShouldIncludeBecauseMessage()
    {
        Action aut = () => Render(@<button type="reset">Click me</button>)
            .Should().HaveType("button", "this is very important to {0}", "Steve");

        aut.Should().Throw<XunitException>()
            .And.UserMessage.Should().Be("Expected IRenderedFragment \"type\" attribute to have value \"button\" because this is very important to Steve, but found \"reset\".");
    }
}