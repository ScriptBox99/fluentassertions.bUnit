@using Xunit.Sdk
@inherits Bunit.TestContext

@code {

    [Fact]
    public void ReturnRenderedFragment_WhenMatchingByString()
    {
        var renderedFragment = Render(@<button><h1>Test</h1></button>);

        var returnedRenderedFragment = renderedFragment.ShouldHaveChildMarkup("<h1>Test</h1>");

        returnedRenderedFragment.Should().BeSameAs(renderedFragment);
    }

    [Fact]
    public void ReturnRenderedFragment_WhenMatchingByRenderFragment()
    {
        var renderedFragment = Render(@<button><h1>Test</h1></button>);

        var returnedRenderedFragment = renderedFragment.ShouldHaveChildMarkup(@<h1>Test</h1>);

        returnedRenderedFragment.Should().BeSameAs(renderedFragment);
    }

    [Fact]
    public void Succeed_WhenHasChildMarkup_AndMatchingByString()
    {
        Render(@<button><h1>Test</h1></button>)
            .ShouldHaveChildMarkup("<h1>Test</h1>");
    }

    [Fact]
    public void Succeed_WhenHasChildMarkup_AndMatchingByRenderFragment()
    {
        Render(@<button><h1>Test</h1></button>)
            .ShouldHaveChildMarkup(@<h1>Test</h1>);
    }

    [Fact]
    public void ThrowException_WhenChildMarkupDoesNotMatch_AndMatchingByString()
    {
        Action aut = () => Render(@<button><h1>Test</h1></button>)
            .ShouldHaveChildMarkup("<h1>Something Else<h1>");

        aut.Should().Throw<HtmlEqualException>();
    }

    [Fact]
    public void ThrowException_WhenChildMarkupDoesNotMatch_AndMatchingByRenderFragment()
    {
        Action aut = () => Render(@<button><h1>Test</h1></button>)
            .ShouldHaveChildMarkup(@<h1>Something Else</h1>);

        aut.Should().Throw<HtmlEqualException>();
    }

    [Fact]
    public void ThrowException_WhenChildMarkupIsMissing_AndMatchingByString()
    {
        Action aut = () => Render(@<button></button>)
            .ShouldHaveChildMarkup("<h1>Test</h1>");

        aut.Should().Throw<XunitException>();
    }

    [Fact]
    public void ThrowException_WhenChildMarkupIsMissing_AndMatchingByRenderFragment()
    {
        Action aut = () => Render(@<button></button>)
            .ShouldHaveChildMarkup(@<h1>Test</h1>);

        aut.Should().Throw<XunitException>();
    }
}